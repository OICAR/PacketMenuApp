@model PocketMenuUI.Models.ModelsDTO.GoogleMapDTO

@{
    ViewData["Title"] = "Create";
}
<div class="container">
    <form id="location-form">
        <button type="submit" class="btn 
                btn-info btn-block">Submit</button>
    </form>
    <form asp-action="Create"
          asp-controller="GoogleMaps" method="post">
        <input type="text" id="location-input"
               placeholder="Please insert your address or point of interest..."
               class="form-control form-control-lg">


        <div class="form-group row">
            <div class="col-sm-10">
                <label asp-for="Address" class="col-sm-2 
                        col-form-label"></label>
            </div>
            <input class="form-control"
                   id="formatted-address"
                   asp-for="Address"/>
        </div>
        <div id="formatted-components"></div>

        <div class="form-group row">
            <div class="col-sm-10">
                <label asp-for="Lat" class="col-sm-2 
                col-form-label"></label>
            </div>
            <input class="form-control" id="latitude-output"
                   asp-for="Lat"/>
        </div>
        <div class="form-group row">
            <div class="col-sm-10">
                <label asp-for="Long" class="col-sm-2 
                            col-form-label"></label>
            </div>
            <input class="form-control" id="longitude-output"
                   asp-for="Long"/>
        </div>


        <button class="btn 
                btn-info btn-block">Confirm</button>
    </form>

</div>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
//geocode();
var locationForm=document.getElementById('location-form');
locationForm.addEventListener('submit',geocode);

function geocode(e) {
    e.preventDefault();
    var location=document.getElementById('location-input').value;
  axios.get('https://maps.googleapis.com/maps/api/geocode/json',{
      params:{
          address:location,
          key:'AIzaSyDQZjR53_GfS-tlqD5xV50sf8rKYB2C4S8'
      }
   })
   .then(function(response){
       console.log(response);

              var formattedAddress= response.data.results[0]
              .formatted_address;
              var formattedAddressOutput = `${formattedAddress}`/* `
              <ul class="list-group"> <li 
              class=list-group-item>${formattedAddress}</li> 
              </ul>`;*/
              
              var addressComponents = response.data
              .results[0].address_components;
              var addressComponentsOutput = '<ul class ="list-group">'; 
              for (var i=0; i< addressComponents.length;i++){
                  addressComponentsOutput += `<li 
                  class="list-group-item"><strong>${addressComponents[i].types[0]}</strong>:${addressComponents[i].long_name}</li>`;
              }
              addressComponentsOutput += '</ul>';
              
                       var lat = response.data.results[0]
                            .geometry.location.lat;
                       var lng = response.data.results[0]
                            .geometry.location.lng;
                            var latitudeOutput = `
                           ${lat}`;
                            var longitudeOutput = `${lng}`;
                            
              
              document.getElementById('formatted-address')
              .value=formattedAddressOutput;   
              document.getElementById('formatted-components')
              .innerHTML=addressComponentsOutput; 
              document.getElementById('latitude-output') .value 
              =latitudeOutput;      
              document.getElementById('longitude-output')
                    .value=longitudeOutput; 
      
   })
   .catch(function(error){
       console.log(error);
   })
}

</script>